<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.RoleMapper">

    <!--查询所有角色（条件）-->
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">

        select * from roles
        <where>
            <if test="name !=null and name != '' ">
                and name like concat('%',#{name},'%')
            </if>
        </where>

    </select>

    <!-- 根据角色ID查询关联的菜单信息ID public List<Integer> findMenuByRoleId(Integer roleid);-->
    <select id="findMenuByRoleId" resultType="int" parameterType="int">
        SELECT m.id
        FROM roles r
                 INNER JOIN role_menu_relation rm ON r.id = rm.role_id
                 INNER JOIN menu m ON m.id = rm.menu_id
        WHERE r.id = #{id}
    </select>


    <!--根据roleid删除在中间表与菜单的关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete
        from role_menu_relation
        where role_id = #{rid}
    </delete>

    <!--为角色分配菜单-->
    <insert id="roleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation
        values (null, #{menuId}, #{roleId}, #{createdTime}, #{updatedTime}, #{createdBy}, #{updatedby})
    </insert>

    <!--删除角色     public void deleteRole(Integer roleid);-->
    <delete id="deleteRole" parameterType="int">
        delete
        from roles
        where id = #{roleid}
    </delete>

    <!-- 查询当前角色拥有的资源分类信息 -->
    <select id="findResourceCategoryListRoleId" parameterType="int" resultType="com.lagou.domain.ResourceCategory">
        select distinct rc.*
        from resource r
                 inner join role_resource_relation rrr on r.id = rrr.resource_id
                 inner join resource_category rc on r.category_id = rc.id
        where rrr.role_id = #{id}
    </select>

    <!-- 获取当前角色拥有的资源信息 -->
    <select id="findResourceListByRoleId" resultType="com.lagou.domain.Resource">
        select r.*
        from resource r
                 inner join role_resource_relation rrr ON r.id = rrr.resource_id
        where rrr.role_id = #{roleid}
          and r.category_id = #{categoryid}
    </select>

    <!-- 根据角色ID删除角色与资源的关联关系 -->
    <delete id="deleteResourceById" parameterType="int">
        delete
        from role_resource_relation
        where role_id = #{id}
    </delete>

    <!-- 插入最新的关联关系 -->
    <insert id="saveResourceRelation" parameterType="com.lagou.domain.RoleResourceRelation">
        insert into role_resource_relation
        values (null, #{resourceId}, #{roleId}, #{createdTime}, #{updatedTime}, #{createdBy}, #{updatedBy})
    </insert>

    <!--添加角色-->
    <insert id="saveRole" parameterType="com.lagou.domain.Role">
        insert into Roles
        values (null, #{code}, #{name}, #{description}, #{createdTime}, #{updatedTime}, #{createdBy}, #{updatedBy})
    </insert>

    <!-- 更新角色 -->
    <update id="updateRole" parameterType="com.lagou.domain.Role">
        update Roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>

            <if test="name != null and name != ''">
                name = #{name},
            </if>

            <if test="description != null and description != ''">
                description = #{description},
            </if>

            <if test="createdTime != null">
                created_time=#{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>

            <if test="createdBy != null">
                created_by=#{createdBy},
            </if>

            <if test="updatedBy != updatedBy">
                updated_by=#{updatedBy},
            </if>

        </trim>

        <where>
            <if test="id != null and id != '' ">id = #{id}</if>
        </where>
    </update>
</mapper>
